services:
  distcomp:
    image: khmelov/distcomp:25-02-02
    container_name: distcomp
    restart: unless-stopped

    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

    networks:
      - dist_net

    ports:
      - 24100:24100

  api:
    image: distcomp/api
    container_name: api
    restart: unless-stopped

    environment:
      API_STORAGE_HOST: db

    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

    networks:
      - api_net
      - db_net
    ports:
      - 24110:24110

    depends_on:
      migrator:
        condition: service_completed_successfully
      db:
        condition: service_healthy

  migrator:
    image: gomicro/goose:3.24.1
    container_name: migrator

    environment:
      GOOSE_DRIVER: "postgres"
      GOOSE_DBSTRING: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
      GOOSE_MIGRATION_DIR: "/migrations"

    networks:
      - db_net
    volumes:
      - "./migrations:/migrations:ro"

    command: [ "goose", "up" ]

    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.0-alpine
    container_name: db
    restart: unless-stopped

    environment:
      PGDATA: ${POSTGRES_DATA}
      PGPORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G

    networks:
      - db_net
    ports:
      - 5432:5432

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  db_net:
  api_net:
  dist_net:
